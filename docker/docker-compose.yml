services:
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: education_postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - education_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U edu_user -d education_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  web-api:
    build:
      context: ./web-api
      dockerfile: Dockerfile
    container_name: education_web_api
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./../data_exports:/app/data_exports
    networks:
      - education_network

  zookeeper:
    build:
      context: ./zookeeper
      dockerfile: Dockerfile
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - education_network

  kafka:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - education_network

  spark:
    build:
      context: ./spark-structured-streaming
      dockerfile: Dockerfile
    container_name: spark_streaming_app
    volumes:
      - ./../data_exports:/app/data_exports
      - ./../spark-checkpoints:/app/checkpoints
    depends_on:
      - kafka
    networks:
      - education_network

  mongo:
    build:
      context: ./mongo
      dockerfile: Dockerfile
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - education_network

  kafka-consumer:
    build:
      context: ./kafka-consumer-app
      dockerfile: Dockerfile
    container_name: kafka_consumer_app
    depends_on:
      - kafka
      - mongo
    networks:
      - education_network

  jmeter:
    build:
      context: ./jmeter
      dockerfile: Dockerfile
    container_name: jmeter
    volumes:
      - ./../jmeter/tests:/jmeter/tests
    depends_on:
      - web-api
    networks:
      - education_network

volumes:
  postgres_data:
  mongo_data:
  spark-checkpoints:

networks:
  education_network:
    driver: bridge